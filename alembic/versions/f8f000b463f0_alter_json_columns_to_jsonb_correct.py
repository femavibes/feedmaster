"""Alter JSON columns to JSONB (correct)

Revision ID: f8f000b463f0
Revises: d493c0964626
Create Date: 2025-06-29 01:04:52.933515

"""
from typing import Sequence, Union # ADDED/ENSURED THIS IMPORT

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql


# revision identifiers, used by Alembic.
revision: str = 'f8f000b463f0'
down_revision: Union[str, Sequence[str], None] = 'd493c0964626'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema: Alter JSON columns to JSONB."""
    # ### commands auto generated by Alembic - please adjust! ###
    # Alter 'hashtags' column in 'posts' table from JSON to JSONB
    op.alter_column('posts', 'hashtags',
               existing_type=sa.dialects.postgresql.JSON(astext_type=sa.Text()),
               type_=sa.dialects.postgresql.JSONB(astext_type=sa.Text()),
               existing_nullable=True,
               postgresql_using='hashtags::jsonb')

    # Alter 'links' column in 'posts' table from JSON to JSONB
    op.alter_column('posts', 'links',
               existing_type=sa.dialects.postgresql.JSON(astext_type=sa.Text()),
               type_=sa.dialects.postgresql.JSONB(astext_type=sa.Text()),
               existing_nullable=True,
               postgresql_using='links::jsonb')

    # Alter 'mentions' column in 'posts' table from JSON to JSONB
    op.alter_column('posts', 'mentions',
               existing_type=sa.dialects.postgresql.JSON(astext_type=sa.Text()),
               type_=sa.dialects.postgresql.JSONB(astext_type=sa.Text()),
               existing_nullable=True,
               postgresql_using='mentions::jsonb')

    # Alter 'embeds' column in 'posts' table from JSON to JSONB
    op.alter_column('posts', 'embeds',
               existing_type=sa.dialects.postgresql.JSON(astext_type=sa.Text()),
               type_=sa.dialects.postgresql.JSONB(astext_type=sa.Text()),
               existing_nullable=True,
               postgresql_using='embeds::jsonb')

    # Alter 'raw_record' column in 'posts' table from JSON to JSONB
    op.alter_column('posts', 'raw_record',
               existing_type=sa.dialects.postgresql.JSON(astext_type=sa.Text()),
               type_=sa.dialects.postgresql.JSONB(astext_type=sa.Text()),
               existing_nullable=False,
               postgresql_using='raw_record::jsonb')

    # Alter 'data_json' column in 'aggregates' table from JSON to JSONB
    op.alter_column('aggregates', 'data_json',
               existing_type=sa.dialects.postgresql.JSON(astext_type=sa.Text()),
               type_=sa.dialects.postgresql.JSONB(astext_type=sa.Text()),
               existing_nullable=False,
               postgresql_using='data_json::jsonb')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema: Alter JSONB columns back to JSON."""
    # ### commands auto generated by Alembic - please adjust! ###
    # Revert 'data_json' column in 'aggregates' table from JSONB to JSON
    op.alter_column('aggregates', 'data_json',
               existing_type=sa.dialects.postgresql.JSONB(astext_type=sa.Text()),
               type_=sa.dialects.postgresql.JSON(astext_type=sa.Text()),
               existing_nullable=False,
               postgresql_using='data_json::json')

    # Revert 'raw_record' column in 'posts' table from JSONB to JSON
    op.alter_column('posts', 'raw_record',
               existing_type=sa.dialects.postgresql.JSONB(astext_type=sa.Text()),
               type_=sa.dialects.postgresql.JSON(astext_type=sa.Text()),
               existing_nullable=False,
               postgresql_using='raw_record::json')

    # Revert 'embeds' column in 'posts' table from JSONB to JSON
    op.alter_column('posts', 'embeds',
               existing_type=sa.dialects.postgresql.JSONB(astext_type=sa.Text()),
               type_=sa.dialects.postgresql.JSON(astext_type=sa.Text()),
               existing_nullable=True,
               postgresql_using='embeds::json')

    # Revert 'mentions' column in 'posts' table from JSONB to JSON
    op.alter_column('posts', 'mentions',
               existing_type=sa.dialects.postgresql.JSONB(astext_type=sa.Text()),
               type_=sa.dialects.postgresql.JSON(astext_type=sa.Text()),
               existing_nullable=True,
               postgresql_using='mentions::json')

    # Revert 'links' column in 'posts' table from JSONB to JSON
    op.alter_column('posts', 'links',
               existing_type=sa.dialects.postgresql.JSONB(astext_type=sa.Text()),
               type_=sa.dialects.postgresql.JSON(astext_type=sa.Text()),
               existing_nullable=True,
               postgresql_using='links::json')

    # Revert 'hashtags' column in 'posts' table from JSONB to JSON
    op.alter_column('posts', 'hashtags',
               existing_type=sa.dialects.postgresql.JSONB(astext_type=sa.Text()),
               type_=sa.dialects.postgresql.JSON(astext_type=sa.Text()),
               existing_nullable=True,
               postgresql_using='hashtags::json')
    # ### end Alembic commands ###
